관점지향 프로그래밍은 객체지향을 대신하는 새로운 개념이 아니라, 기존 객체지향을 더욱 보완, 확장하여 사용할 수 있도록 도와주는 개념이다.
가장 기초가 되는 개념은 관심의 분리이다. 핵심관점(비즈니스 로직) + 횡단관점(트랜잭션, 로그, 권한 체크, 인증, 예외 처리 등)으로 
관심의 분리를 실현한다. 각 객체별로 처리했던 것을 각 관점별로 외부에서 접근하여 기능을 주입하는것이다. 관점지향으로 프로그래밍하면 
중복 코드 제거, 효율적인 유지보수, 높은 생산성, 재활용성 극대화, 변화 수용 용이 등의 장점이있다.

